---
title: "Gravel Scatter"
editor: visual
---

```{r setup-gravel-scatter, warning=FALSE, message=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      message = FALSE,
                      warning = FALSE,
                      knitr.kable.NA = '')
# wrangling packages
library(here) # here makes a project transportable
library(janitor) # clean_names
library(readxl) # read excel, duh!
library(data.table) # magical data frames
library(magrittr) # pipes
library(stringr) # string functions
library(forcats) # factor functions

# analysis packages
library(emmeans) # the workhorse for inference
library(nlme) # gls and some lmm
library(lme4) # linear mixed models
library(lmerTest) # linear mixed model inference
library(afex) # ANOVA linear models
library(glmmTMB) # generalized linear models
library(MASS) # negative binomial and some other functions
library(car) # model checking and ANOVA
library(DHARMa) # model checking
library(mvtnorm)

# graphing packages
library(ggsci) # color palettes
library(ggpubr) # publication quality plots
library(ggforce) # better jitter
library(cowplot) # combine plots
library(knitr) # kable tables
library(kableExtra) # kable_styling tables
library(ggdendro) # dendrogram
library(dendextend) # better dendrogram
library(ggiraph)
library(GGally)

# plotly
library(plotly)
library(flexdashboard)
library(crosstalk)

# ggplot_the_model.R packages not loaded above
library(insight)
library(lazyWeave)

# use here from the here package
here <- here::here
# use clean_names from the janitor package
clean_names <- janitor::clean_names
# use transpose from data.table
transpose <- data.table::transpose

pal_okabe_ito <- c(
  "#E69F00",
  "#56B4E9",
  "#009E73",
  "#F0E442",
  "#0072B2",
  "#D55E00",
  "#CC79A7"
)
pal_okabe_ito_blue <- pal_okabe_ito[c(5,6,1,2,3,7,4)] 
pal_okabe_ito_red <- pal_okabe_ito[c(6,5,3,1,2,7,4)] 
pal_okabe_ito_2 <- pal_okabe_ito[c(5,6)]
pal_okabe_ito_3 <- pal_okabe_ito[c(5,6,7)]
pal_okabe_ito_3_light <- pal_okabe_ito[c(1,2,7)]
pal_okabe_ito_4 <- pal_okabe_ito[c(5,6,7,2)]

geo_bike_path <- here("rds", "geobike.Rds")
geobike <- readRDS(geo_bike_path)
my_fit <- geobike[my_fit == TRUE,]

```

# Lengths and Angles

```{r gravel-scatter}
shared_data <- my_fit %>% 
  SharedData$new()

p1 <- shared_data %>% 
  plot_ly(x = ~reach, y = ~stack, color = ~restyle,
          hoverinfo = "text",
          text = ~paste(model, frame_size,
          "<br>Cat:", restyle,
          "<br>Reach:", reach,
          "<br>Stack:", stack)) %>% 
  group_by(restyle) %>% 
  add_markers(size = 3) %>%
  layout(xaxis = list(title = "Reach"),
         yaxis = list(title = "\nStack"),
         showlegend = FALSE)
p2 <- shared_data %>% 
  plot_ly(x = ~head_tube_angle, y = ~seat_tube_angle, color = ~restyle,
          hoverinfo = "text",
          text = ~paste(model, frame_size,
          "<br>Cat:", restyle,
          "<br>HTA:", head_tube_angle,
          "<br>STA:", seat_tube_angle)) %>% 
  group_by(restyle) %>% 
  add_markers(size = 3) %>%
  layout(xaxis = list(title = "Head Tube Angle"),
         yaxis = list(title = "\nSeat Tube Angle"),
         showlegend = FALSE)
p3 <- shared_data %>% 
  plot_ly(x = ~rear_center, y = ~front_center, color = ~restyle,
          hoverinfo = "text",
          text = ~paste(model, frame_size,
          "<br>Cat:", restyle,
          "<br>RC:", rear_center,
          "<br>FC:", front_center)) %>% 
  group_by(restyle) %>% 
  add_markers(size = 3) %>%
  layout(xaxis = list(title = "Rear Center (Horizontal)"),
         yaxis = list(title = "\nFront Center (Horizontal)"),
         showlegend = FALSE)
p4 <- shared_data %>% 
  plot_ly(x = ~trail, y = ~bottom_bracket_drop, color = ~restyle,
          hoverinfo = "text",
          text = ~paste(model, frame_size,
          "<br>Cat:", restyle,
          "<br>Trail:", round(trail, 0),
          "<br>BB Drop:", bottom_bracket_drop)) %>% 
  group_by(restyle) %>% 
  add_markers(size = 3) %>%
  layout(xaxis = list(title = "Trail"),
         yaxis = list(title = "\nBottom Bracket Drop"),
         showlegend = FALSE)
p5 <- shared_data %>% 
  plot_ly(x = ~front_wheelbase, y = ~stack_reach, color = ~restyle,
          hoverinfo = "text",
          text = ~paste(model, frame_size,
          "<br>Cat:", restyle,
          "<br>S/R", front_wheelbase,
          "<br>RC/WB", stack_reach)) %>% 
  group_by(restyle) %>% 
  add_markers(size = 3) %>%
  layout(xaxis = list(title = "Front Center/Wheelbase"),
         yaxis = list(title = "\nStack/Reach"),
         showlegend = FALSE)
p6 <- shared_data %>% 
  plot_ly(x = ~front_wheelbase, y = ~sta_hta, color = ~restyle,
          hoverinfo = "text",
          text = ~paste(model, frame_size,
          "<br>Cat:", restyle,
          "<br>STA/HTA:", front_wheelbase,
          "<br>RC/WB:", sta_hta)) %>% 
  group_by(restyle) %>% 
  add_markers(size = 3) %>%
  layout(xaxis = list(title = "Front Center/Wheelbase\n"),
         yaxis = list(title = "\nSTA/HTA"),
         showlegend = FALSE)

bscols(widths = c(9, 3),
       list(p1, p2,
       p3, p4,
       p5, p6),
       list(
         filter_checkbox(id = "style", label = "Style",
                         sharedData = shared_data,
                         group = ~restyle)
       )
)
```

