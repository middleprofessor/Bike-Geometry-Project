---
title: "Giant Revolt X"
---

::: {.callout-note}
Classification of gravel bikes is based on a frame size that fits a 176 cm (5' 9.3") cm high rider, according to manufacturer's charts.
:::

```{r revoltx-setup, echo=FALSE, warning=FALSE, message=FALSE}
source_path <- here::here("bike_geometry_project.R")
source(source_path)

```

```{r revoltx-bikes, echo = FALSE}
bikes_cols <- c("model", "year", "frame_size", "reach", "stack", "rear_center", "front_center", "head_tube_angle", "seat_tube_angle", "bottom_bracket_drop", "trail", "front_wheelbase", "stack_reach", "sta_hta", "restyle", "model_size")
bikes <- geobike[, .SD, .SDcols = bikes_cols]
opacity <- rep(0.5, nrow(bikes))
```

```{r revoltx-ternary-plot, echo=FALSE, out.width = "100%", out.height = "100%"}
nbd <- c("Giant Revolt X pro 1 long",
         "Giant Revolt X pro 1 short",
         # "Giant Revolt pro long",
         # "Giant Revolt pro short",
         NULL)

subdata <- my_fit[model %in% nbd]

p <- base_ternary(my_fit)
p <- p %>%
    add_trace(
      data = subdata,
      type = 'scatterternary',
      mode = 'markers',
      a = ~racy,
      b = ~relaxed,
      c = ~rowdy,
      marker = list( 
        size = 14,
        opacity = 1,
        color = ~color
      ),
      text = ~paste(model, frame_size),
      textfont = list(size = 12),
      name = ~model,
      textposition = "right",
      showlegend = FALSE
    )

p
```

```{r revoltx-plotit, echo = FALSE, echo=FALSE, warning=FALSE, message=FALSE, out.width = "100%", out.height = "100%"}


xy_sets <- rbind(
  c("reach", "stack", "Reach (mm)", "Stack (mm)", TRUE),
  c("rear_center", "front_center", "Rear Center (mm)", "Front Center (mm)", TRUE),  
  c("head_tube_angle", "seat_tube_angle", "Head Tube Angle (°)", "Seat Tube Angle (°)", TRUE),
  c("head_tube_angle", "trail", "Head Tube Angle (°)", "Trail (mm)", FALSE),
  c("front_wheelbase", "stack_reach", "FC/WB", "Stack/Reach", FALSE),
  c("front_wheelbase", "sta_hta", "FC/WB", "STA/HTA", FALSE)
) %>%
  data.table()
setnames(xy_sets, new = c("x", "y", "x_label", "y_label", "xy_scale"))

p2_list <- list()
for(i in 1:nrow(xy_sets)){
  p <- base_plot(data = my_fit,
                 x_col = xy_sets[i, x],
                 y_col = xy_sets[i, y],
                 color_col = "restyle",
                 legend_col = "model_size",
                 x_label = xy_sets[i, x_label],
                 y_label = xy_sets[i, y_label],
                 dot_palette = pal_okabe_ito_7,
                 dot_opacity = 0.3,
                 same_xy_scale = xy_sets[i, xy_scale])
  text_1 <- FALSE # want to use text_1 but it doesn't work
  if(text_1 == TRUE){
    p <- p %>% add_trace(
      data = subdata,
      type = 'scatter',
      mode = 'markers',
      x = ~get(xy_sets[i, x]),
      y = ~get(xy_sets[i, y]),
      marker = list( 
        size = 14,
        opacity = 1,
        color = ~color
      ),
      text = ~paste(model, frame_size),
      textfont = list(size = 12),
      name = ~model_size,
      showarrow = TRUE,
      arrowhead = 1,
      ax = 20,
      ay = c(-20, 20, -20, 20),
      
#      textposition = c("right", "top", "right", "bottome"),
      showlegend = FALSE
    )
  }else{
    p <- p %>% annotate_model(data = my_fit,
                              x_col = xy_sets[i, x],
                              y_col = xy_sets[i, y],
                              g_col = "restyle",
                              text_col = "model",
                              text_target = nbd,
                              dx = c(20, 20),
                              dy = c(20,-20)
    )
  }
  p2_list[[i]] =  plotly_build(p)
}

p2_list[[1]]
p2_list[[2]]
p2_list[[3]]
p2_list[[4]]
p2_list[[5]]
p2_list[[6]]

```




