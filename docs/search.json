[
  {
    "objectID": "qmd/toggle_annotation.html#toggle-legend",
    "href": "qmd/toggle_annotation.html#toggle-legend",
    "title": "Toggling the Annotation",
    "section": "toggle legend",
    "text": "toggle legend"
  },
  {
    "objectID": "qmd/toggle_annotation.html#superimpose-points-and-toggle-with-legend",
    "href": "qmd/toggle_annotation.html#superimpose-points-and-toggle-with-legend",
    "title": "Toggling the Annotation",
    "section": "Superimpose points and toggle with legend",
    "text": "Superimpose points and toggle with legend"
  },
  {
    "objectID": "qmd/gravel_class.html",
    "href": "qmd/gravel_class.html",
    "title": "Gravel Style",
    "section": "",
    "text": "Classification of bikes based on frame sizes that fit me (generally size M or 54-56 cm)\n \n  \n    Trail \n    Endurance \n    All-Road \n  \n \n\n  \n    Amigo Bug Out \n    Bearclaw Beaux Jaxon \n    Alchemy Rogue \n  \n  \n    BMC URS AL \n    BlackMtnCy La Cabra \n    All-City Cosmic Stallion \n  \n  \n    BMC URS AL SUS \n    Bombtrack Beyond 2 \n    All-City Gorilla Monsoon \n  \n  \n    BMC URS One \n    Chiru Kegeti \n    Argonaut GR3 \n  \n  \n    Bombtrack Beyond+ Adv \n    Cinelli Hobootleg Geo \n    Blackheart All Road TI \n  \n  \n    Breezer Radar X Pro \n    Genesis Vagabond \n    BlackMtnCy Monstercross V5 \n  \n  \n    Chumba Yaupon \n    Kona Sutra ULTD \n    Bombtrack Hook \n  \n  \n    Cotic Cascade \n    Light Blue Darwin \n    Cannondale SuperSix Evo \n  \n  \n    Enigma Escape Flat-bar \n    Mason InSearchOf \n    Canyon Grail 7 1by \n  \n  \n    Evil Chamois Hagar GRX \n    Moots Routt ESC \n    Canyon Grizl 7 1by \n  \n  \n    Fezzari Shafer \n    Otso Warakin Stainless \n    Cervelo Aspero \n  \n  \n    Fiftyone Assassin long-low \n    Panorama Taiga EXP \n    Chumba Terlingua steel fdo \n  \n  \n    Fiftyone Assassin short-hi \n    Reeb Sams Pants \n    Devinci Hatchet \n  \n  \n    Fustle Causway GR1 \n    Ritchey Outback frameset \n    Giant Revolt X pro 1 long \n  \n  \n    Hudski Doggler Gravel \n    Salsa Cutthroat \n    Giant Revolt X pro 1 short \n  \n  \n    Kanzo Adventure New \n    Salsa Fargo front dropout \n    Lauf Siegla \n  \n  \n    Knolly Cache Steel \n    Salsa Fargo rear dropout \n    Niner RLT 9 RDO \n  \n  \n    Marin DSX 2 \n    Salsa Vaya \n    No22 Drifter X \n  \n  \n    Merida Silex \n    Tout Terrain Scrambler 28 \n    Noble GX 5 \n  \n  \n    Mosaic GT-1X \n    Tumbleweed Stargazer \n    Obed Boundary \n  \n  \n    Nordest Kutxo \n     \n    OPEN U.P. \n  \n  \n    Otso Fenrir \n     \n    Open WI.DE \n  \n  \n    Revel Rover \n     \n    Otso Waheela C front \n  \n  \n    Rondo MYLC CF Hi \n     \n    Otso Waheela C rear \n  \n  \n    Rondo MYLC CF Lo \n     \n    Pinarello Grevil F \n  \n  \n    Sonder Camino AL \n     \n    Ribble Gravel SL \n  \n  \n    Specialized Diverge Evo \n     \n    Rose Backroad XPLR \n  \n  \n    Specialized Diverge STR \n     \n    Salsa Warbird \n  \n  \n    Surly Ghost Grappler \n     \n    Santa Cruz Stigmata \n  \n  \n    Whyte Friston Gravel \n     \n    Scott Addict Gravel 10 \n  \n  \n    YT Szepter \n     \n    Shand Stooshie \n  \n  \n     \n     \n    Solace OM-3 Short \n  \n  \n     \n     \n    Specialized Diverge \n  \n  \n     \n     \n    Squid Gravtron \n  \n  \n     \n     \n    Thesis OB1 \n  \n  \n     \n     \n    Trek Boone 6 \n  \n  \n     \n     \n    Trek Checkpoint SL5 \n  \n  \n     \n     \n    Why R+ V4 \n  \n  \n     \n     \n    Wilier Jena \n  \n  \n     \n     \n    Wilier Rave SLR"
  },
  {
    "objectID": "qmd/gravel_scatter old with bscols.html",
    "href": "qmd/gravel_scatter old with bscols.html",
    "title": "Gravel Scatter",
    "section": "",
    "text": "Lengths and Angles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStyle\n\n\n\n\nTrail\n\n\n\n\n\nEndurance\n\n\n\n\n\nAll-Road\n\n\n\n\n\n\n\n\n\n\n\n\nRatios\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStyle\n\n\n\n\nTrail\n\n\n\n\n\nEndurance\n\n\n\n\n\nAll-Road"
  },
  {
    "objectID": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-crazy-low-stack",
    "href": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-crazy-low-stack",
    "title": "Is a gravel bike a 1990s mountain bike?",
    "section": "No! 1990s mountain bikes have crazy low stack!",
    "text": "No! 1990s mountain bikes have crazy low stack!"
  },
  {
    "objectID": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-shorter-rearends-than-endurance-gravel-shorter-frontends-than-trail-gravel-and-longer-frontends-than-all-road-gravel",
    "href": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-shorter-rearends-than-endurance-gravel-shorter-frontends-than-trail-gravel-and-longer-frontends-than-all-road-gravel",
    "title": "Is a gravel bike a 1990s mountain bike?",
    "section": "No! 1990s mountain bikes have shorter rearends than Endurance gravel, shorter frontends than Trail gravel, and longer frontends than All-Road gravel!",
    "text": "No! 1990s mountain bikes have shorter rearends than Endurance gravel, shorter frontends than Trail gravel, and longer frontends than All-Road gravel!"
  },
  {
    "objectID": "qmd/mtb_90s.html#no-1990s-mountain-bikes-had-upright-head-tube-angles-compared-to-endurance-and-trail-gravel",
    "href": "qmd/mtb_90s.html#no-1990s-mountain-bikes-had-upright-head-tube-angles-compared-to-endurance-and-trail-gravel",
    "title": "Is a gravel bike a 1990s mountain bike?",
    "section": "No! 1990s mountain bikes had upright head tube angles compared to Endurance and Trail gravel!",
    "text": "No! 1990s mountain bikes had upright head tube angles compared to Endurance and Trail gravel!"
  },
  {
    "objectID": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-crazy-small-bottom-bracket-drops",
    "href": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-crazy-small-bottom-bracket-drops",
    "title": "Is a gravel bike a 1990s mountain bike?",
    "section": "No! 1990s mountain bikes have crazy small bottom bracket drops!",
    "text": "No! 1990s mountain bikes have crazy small bottom bracket drops!"
  },
  {
    "objectID": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-crazy-low-stackreach",
    "href": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-crazy-low-stackreach",
    "title": "Is a gravel bike a 1990s mountain bike?",
    "section": "No! 1990s mountain bikes have crazy low stack:reach!",
    "text": "No! 1990s mountain bikes have crazy low stack:reach!"
  },
  {
    "objectID": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-low-stahta-compared-to-trail-gravel-and-low-stahta-given-their-relative-front-center-compared-to-endurance-gravel",
    "href": "qmd/mtb_90s.html#no-1990s-mountain-bikes-have-low-stahta-compared-to-trail-gravel-and-low-stahta-given-their-relative-front-center-compared-to-endurance-gravel",
    "title": "Is a gravel bike a 1990s mountain bike?",
    "section": "No! 1990s mountain bikes have low STA:HTA compared to Trail gravel and low STA:HTA given their relative front center compared to Endurance gravel",
    "text": "No! 1990s mountain bikes have low STA:HTA compared to Trail gravel and low STA:HTA given their relative front center compared to Endurance gravel"
  },
  {
    "objectID": "Rmd/bike_geometry_project.html",
    "href": "Rmd/bike_geometry_project.html",
    "title": "Bike Geometry Project",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE,\n                      message = FALSE,\n                      warning = FALSE,\n                      knitr.kable.NA = '')\n# wrangling packages\nlibrary(here) # here makes a project transportable\nlibrary(janitor) # clean_names\nlibrary(readxl) # read excel, duh!\nlibrary(data.table) # magical data frames\nlibrary(magrittr) # pipes\nlibrary(stringr) # string functions\nlibrary(forcats) # factor functions\n\n# analysis packages\nlibrary(emmeans) # the workhorse for inference\nlibrary(nlme) # gls and some lmm\nlibrary(lme4) # linear mixed models\nlibrary(lmerTest) # linear mixed model inference\nlibrary(afex) # ANOVA linear models\nlibrary(glmmTMB) # generalized linear models\nlibrary(MASS) # negative binomial and some other functions\nlibrary(car) # model checking and ANOVA\nlibrary(DHARMa) # model checking\nlibrary(mvtnorm)\n\n# graphing packages\nlibrary(ggsci) # color palettes\nlibrary(ggpubr) # publication quality plots\nlibrary(ggforce) # better jitter\nlibrary(cowplot) # combine plots\nlibrary(knitr) # kable tables\nlibrary(kableExtra) # kable_styling tables\nlibrary(ggdendro) # dendrogram\nlibrary(dendextend) # better dendrogram\nlibrary(ggiraph)\nlibrary(GGally)\n\n# plotly\nlibrary(plotly)\nlibrary(flexdashboard)\nlibrary(crosstalk)\n\n# ggplot_the_model.R packages not loaded above\nlibrary(insight)\nlibrary(lazyWeave)\n\n# use here from the here package\nhere <- here::here\n# use clean_names from the janitor package\nclean_names <- janitor::clean_names\n# use transpose from data.table\ntranspose <- data.table::transpose\n\n# load functions used by this text written by me\n# ggplot_the_model.R needs to be in the folder \"R\"\n# if you didn't download this and add to your R folder in your\n# project, then this line will cause an error\n#source_path <- here(\"R\", \"ggplot_the_model.R\")\n#source(source_path)\n\ndata_folder <- \"data\"\nimage_folder <- \"images\"\noutput_folder <- \"output\"\n\npal_okabe_ito <- c(\n  \"#E69F00\",\n  \"#56B4E9\",\n  \"#009E73\",\n  \"#F0E442\",\n  \"#0072B2\",\n  \"#D55E00\",\n  \"#CC79A7\"\n)\n\npal_okabe_ito_3 <- pal_okabe_ito[c(1,2,3)]\npal_okabe_ito_4 <- pal_okabe_ito[c(1,2,3,6)]"
  },
  {
    "objectID": "Rmd/bike_geometry_project.html#general",
    "href": "Rmd/bike_geometry_project.html#general",
    "title": "Bike Geometry Project",
    "section": "General",
    "text": "General\n\ndeg_2_rad <- function(x){\n  rad <- x*pi/180\n  return(rad)\n}"
  },
  {
    "objectID": "Rmd/bike_geometry_project.html#dendrogram",
    "href": "Rmd/bike_geometry_project.html#dendrogram",
    "title": "Bike Geometry Project",
    "section": "Dendrogram",
    "text": "Dendrogram\n\n# https://atrebas.github.io/post/2019-06-08-lightweight-dendrograms/\ndendro_data_k <- function(hc, k) {\n  hcdata    <-  ggdendro::dendro_data(hc, type = \"rectangle\")\n  seg       <-  hcdata$segments\n  labclust  <-  cutree(hc, k)[hc$order]\n  segclust  <-  rep(0L, nrow(seg))\n  heights   <-  sort(hc$height, decreasing = TRUE)\n  height    <-  mean(c(heights[k], heights[k - 1L]), na.rm = TRUE)\n  \n  for (i in 1:k) {\n    xi      <-  hcdata$labels$x[labclust == i]\n    idx1    <-  seg$x    >= min(xi) & seg$x    <= max(xi)\n    idx2    <-  seg$xend >= min(xi) & seg$xend <= max(xi)\n    idx3    <-  seg$yend < height\n    idx     <-  idx1 & idx2 & idx3\n    segclust[idx] <- i\n  }\n  \n  idx                    <-  which(segclust == 0L)\n  segclust[idx]          <-  segclust[idx + 1L]\n  hcdata$segments$clust  <-  segclust\n  hcdata$segments$line   <-  as.integer(segclust < 1L)\n  hcdata$labels$clust    <-  labclust\n  \n  hcdata\n}\n\nset_labels_params <- function(nbLabels,\n                              direction = c(\"tb\", \"bt\", \"lr\", \"rl\"),\n                              fan       = FALSE) {\n  if (fan) {\n    angle       <-  360 / nbLabels * 1:nbLabels + 90\n    idx         <-  angle >= 90 & angle <= 270\n    angle[idx]  <-  angle[idx] + 180\n    hjust       <-  rep(0, nbLabels)\n    hjust[idx]  <-  1\n  } else {\n    angle       <-  rep(0, nbLabels)\n    hjust       <-  0\n    if (direction %in% c(\"tb\", \"bt\")) { angle <- angle + 45 }\n    if (direction %in% c(\"tb\", \"rl\")) { hjust <- 1 }\n  }\n  list(angle = angle, hjust = hjust, vjust = 0.5)\n}\n\nplot_ggdendro <- function(hcdata,\n                          direction   = c(\"lr\", \"rl\", \"tb\", \"bt\"),\n                          fan         = FALSE,\n                          scale.color = NULL,\n                          branch.size = 1,\n                          label.size  = 3,\n                          nudge.label = 0.01,\n                          expand.y    = 0.1) {\n  \n\n  direction <- match.arg(direction) # if fan = FALSE\n  ybreaks   <- pretty(segment(hcdata)$y, n = 5)\n  ymax      <- max(segment(hcdata)$y)\n  \n  ## branches\n  p <- ggplot() +\n    geom_segment(data         =  segment(hcdata),\n                 aes(x        =  x,\n                     y        =  y,\n                     xend     =  xend,\n                     yend     =  yend,\n                     linetype =  factor(line),\n                     colour   =  factor(clust)),\n                 lineend      =  \"round\",\n                 show.legend  =  FALSE,\n                 size         =  branch.size)\n  \n  ## orientation\n  if (fan) {\n    p <- p +\n      coord_polar(direction = -1) +\n      scale_x_continuous(breaks = NULL,\n                         limits = c(0, nrow(label(hcdata)))) +\n      scale_y_reverse(breaks = ybreaks)\n  } else {\n    p <- p + scale_x_continuous(breaks = NULL)\n    if (direction %in% c(\"rl\", \"lr\")) {\n      p <- p + coord_flip()\n    }\n    if (direction %in% c(\"bt\", \"lr\")) {\n      p <- p + scale_y_reverse(breaks = ybreaks)\n    } else {\n      p <- p + scale_y_continuous(breaks = ybreaks)\n      nudge.label <- -(nudge.label)\n    }\n  }\n  \n  # labels\n  labelParams <- set_labels_params(nrow(hcdata$labels), direction, fan)\n  hcdata$labels$angle <- labelParams$angle\n  \n  p <- p +\n    geom_text(data        =  label(hcdata),\n              aes(x       =  x,\n                  y       =  y,\n                  label   =  label,\n                  colour  =  factor(clust),\n                  angle   =  angle),\n              vjust       =  labelParams$vjust,\n              hjust       =  labelParams$hjust,\n              nudge_y     =  ymax * nudge.label,\n              size        =  label.size,\n              show.legend =  FALSE)\n  \n  # theme\n    # p <- p + theme_pubr() +\n    #   theme(axis.text.x=element_blank())\n  \n  # colors and limits\n  if (!is.null(scale.color)) {\n    scale.color <- c(\"#000000\", scale.color) #my addition\n    p <- p + scale_color_manual(values = scale.color)\n  }\n  \n  ylim <- -round(ymax * expand.y, 1)\n  p    <- p + expand_limits(y = ylim)\n\n  \n  p\n}\n\n\nget_tree <- function(geobike_subset,\n                  y_cols,\n                  scale_it = TRUE,\n                  center_it = TRUE,\n                  hclust_method = \"ward.D2\"\n){\n  # dd <- dist(scale(geobike_subset[, .SD, .SDcols = y_cols],\n  #                  center = center_it,\n  #                  scale = scale_it),\n  #            method = \"euclidean\")\n  # dendro <- hclust(dd, method = hclust_method) %>%\n  #   as.dendrogram() %>%\n  #   place_labels(paste(geobike_subset[, model],\n  #                      geobike_subset[, frame_size],\n  #                      sep = \", \"))\n  \n  cluster_data <- geobike_subset[, .SD, .SDcols = y_cols] %>%\n    data.frame\n  row.names(cluster_data) <- paste(geobike_subset[, model],\n                                   geobike_subset[, frame_size],\n                                   sep = \", \")\n  d_matrix <- dist(scale(cluster_data,\n                         center = center_it,\n                         scale = scale_it),\n                   method = \"euclidean\")\n  hc <- hclust(d_matrix, method = hclust_method)\n  return(hc)\n  \n}"
  },
  {
    "objectID": "Rmd/bike_geometry_project.html#bike-geometry-helpers",
    "href": "Rmd/bike_geometry_project.html#bike-geometry-helpers",
    "title": "Bike Geometry Project",
    "section": "Bike geometry helpers",
    "text": "Bike geometry helpers\n\ncompute_axle_crown <- function(){\n  \n}\n\ncompute_chainstay_h <- function(bike){\n  # the horizontal component of chainstay length \n  # bbd = bottom bracket drop\n  # csl = chainstay length\n  chainstay_h <- with(bike,\n                      sqrt(chainstay_length^2 - bottom_bracket_drop^2))\n  return(chainstay_h)\n}\n\n\ncompute_offset_h <- function(bike){\n  # the horizontal component of fork offset\n  offset_h <- with(bike,\n                 fork_offset_rake/sin(deg_2_rad(head_tube_angle)))\n  return(offset_h)\n}\n\ncompute_head_tube_h <- function(bike){\n  # the horizontal component of head_tube\n  head_tube_h <- with(bike,\n               head_tube_length*cos(deg_2_rad(head_tube_angle)))\n  return(head_tube_h)\n}\ncompute_head_tube_v <- function(bike){\n  # the vertical component of head_tube\n  head_tube_v <- with(bike,\n                      head_tube_length*sin(deg_2_rad(head_tube_angle)))\n  return(head_tube_v)\n}\n\ncompute_fork_angle <- function(bike){\n  # angle of fork axle-crown axis to horizontal\n  # beta is angle of fork axle-crow to offset line\n  beta <- with(bike,\n               acos(fork_offset_rake/axle_crown)*180/pi)\n  # delta is angle from offset line to horizontal\n  delta <- with(bike,\n                90 - head_tube_angle)\n  fork_angle <- beta - delta\n  return(fork_angle)\n}\n\ncompute_steering_v <- function(bike){\n  # steering_v is the vertical component of the steering axis from top of head tube\n  # to the horizontal line through wheel axles - so height from axle to head tube crown\n  steering_v <- with(bike,\n                     stack - bottom_bracket_drop)\n  return(steering_v)\n}\n\ncompute_steering_h <- function(bike){\n  steering_v <- compute_steering_v(bike)\n  steering_h <- with(bike,\n                     steering_v/tan(deg_2_rad(head_tube_angle)))\n  return(steering_h)\n}"
  },
  {
    "objectID": "Rmd/bike_geometry_project.html#compute-missing-data",
    "href": "Rmd/bike_geometry_project.html#compute-missing-data",
    "title": "Bike Geometry Project",
    "section": "Compute missing data",
    "text": "Compute missing data\n\ncompute_wheelbase <- function(bike){\n  steering_v <- compute_steering_v(bike)\n  steering_h <- compute_steering_h(bike)\n  offset_h <- compute_offset_h(bike)\n  chainstay_h <- compute_chainstay_h(bike)\n  wheelbase <- with(bike,\n                    chainstay_h + reach + steering_h + offset_h)\n  return(wheelbase)\n}\n\n# Solace OM3 does not specify head tube length. This can be\n# computed using specs of Whisky MCX fork assuming this is\n# the fork used to spec wheelbase\nhead_tube_length <- function(bike){\n  offset_h <- compute_offset_h(bike)\n  fork_angle <- compute_fork_angle(bike)\n}\n\n# Vagabond Genesis does not specify chainstay length.\ncompute_chainstay_length <- function(bike){\n  head_tube_h <- compute_head_tube_h(bike)\n  head_tube_v <- compute_head_tube_v(bike)\n  fork_v <- with(bike,\n                 stack - bottom_bracket_drop - head_tube_v)\n  \n  fork_h1 = with(bike,\n                 fork_v/tan(deg_2_rad(head_tube_angle)))\n  offset_h <- compute_offset_h(bike)\n  chainstay_h <- with(bike,\n                      wheelbase - reach - head_tube_h - fork_h1 - \n                        offset_h)\n  \n  chainstay <- with(bike,\n                    sqrt(chainstay_h^2 + bottom_bracket_drop^2))\n  \n  return(chainstay)\n}\n\ncompute_fork_offset <- function(bike){\n  # steer_axis_h is base of triangle from top-head-tube to vertex created by steering axis and wheelbase.\n  # tan hta <- stack/steer_axis_h\n  steer_axis_v <- with(bike,\n                       stack - bottom_bracket_drop)\n  steer_axis_h <- with(bike,\n                       steer_axis_v /\n                         tan(deg_2_rad(head_tube_angle)))\n  chainstay_h <- compute_chainstay_h(bike)\n  offset_h <- with(bike,\n                   wheelbase - chainstay_h - reach - steer_axis_h)\n  offset <- with(bike,\n                 offset_h * sin(deg_2_rad(head_tube_angle)))\n  return(offset)\n}\n\ncompute_effective_top_tube_length <- function(bike){\n  # amigo bug out is missing this\n  #\n  seat_h <- with(bike,\n                 stack/tan(deg_2_rad(seat_tube_angle)))\n  effective_top_tube_length <- with(bike,\n                                    seat_h + reach)\n  return(effective_top_tube_length)\n}"
  },
  {
    "objectID": "Rmd/bike_geometry_project.html#geometery-checker",
    "href": "Rmd/bike_geometry_project.html#geometery-checker",
    "title": "Bike Geometry Project",
    "section": "geometery checker",
    "text": "geometery checker\n\ngeom_checker <- function(chainstay_length, # chainstay length\n                         bottom_bracket_drop, # bottom bracket drop\n                         reach,\n                         stack,\n                         head_tube_angle, # head tube angle\n                         rake, # head tube length\n                         wheelbase){ # wheelbase\n  # do all the horizontal components add to wheelbase?\n  chainstay_length_h <- compute_chainstay_h(bike)\n  steer_axis_v <- stack - bottom_bracket_drop\n  steer_axis_h <- steer_axis_v /\n    tan(deg_2_rad(head_tube_angle))\n\n  offset_h <- compute_offset_h(bike)\n  wheelbase_computed <- chainstay_length_h + reach +\n    steer_axis_h + offset_h\n\n  }"
  },
  {
    "objectID": "Rmd/geometry_plotly.html",
    "href": "Rmd/geometry_plotly.html",
    "title": "Bike Geometry Project",
    "section": "",
    "text": "Trail \n    Endurance \n    All-Road \n  \n \n\n  \n    Enigma Escape Flat-bar \n    Tumbleweed Stargazer \n    All-City Cosmic Stallion \n  \n  \n    Revel Rover \n    Reeb Sams Pants \n    Bombtrack Hook \n  \n  \n    Merida Silex \n    Tout Terrain Scrambler 28 \n    Rose Backroad XPLR \n  \n  \n    Specialized Diverge STR \n    Ritchey Outback frameset \n    Cervelo Aspero \n  \n  \n    Fiftyone Assassin long-low \n    Bombtrack Beyond 2 \n    Cannondale SuperSix Evo \n  \n  \n    BMC URS AL SUS \n    Light Blue Darwin \n    No22 Drifter X \n  \n  \n    Sonder Camino AL \n    Bearclaw Beaux Jaxon \n    Chumba Terlingua steel fdo \n  \n  \n    Fezzari Shafer \n    Salsa Vaya \n    Shand Stooshie \n  \n  \n    Kanzo Adventure New \n    Genesis Vagabond \n    Pinarello Grevil F \n  \n  \n    Mosaic GT-1X \n    Otso Warakin Stainless \n    Open WI.DE \n  \n  \n    Fiftyone Assassin short-hi \n    Salsa Fargo rear dropout \n    Salsa Warbird \n  \n  \n    BMC URS One \n    Salsa Fargo front dropout \n    Niner RLT 9 RDO \n  \n  \n    Marin DSX 2 \n    Cinelli Hobootleg Geo \n    BlackMtnCy Monstercross V5 \n  \n  \n    BMC URS AL \n    Panorama Taiga EXP \n    Noble GX 5 \n  \n  \n    Knolly Cache Steel \n    Kona Sutra ULTD \n    Obed Boundary \n  \n  \n    Whyte Friston Gravel \n    BlackMtnCy La Cabra \n    Ribble Gravel SL \n  \n  \n    Cotic Cascade \n    Salsa Cutthroat \n    All-City Gorilla Monsoon \n  \n  \n    Chumba Yaupon \n    Mason InSearchOf \n    Canyon Grail 7 1by \n  \n  \n    Bombtrack Beyond+ Adv \n    Moots Routt ESC \n    Canyon Grizl 7 1by \n  \n  \n    Breezer Radar X Pro \n    Chiru Kegeti \n    Giant Revolt X pro 1 long \n  \n  \n    Surly Ghost Grappler \n     \n    Wilier Rave SLR \n  \n  \n    Specialized Diverge Evo \n     \n    Scott Addict Gravel 10 \n  \n  \n    Fustle Causway GR1 \n     \n    Alchemy Rogue \n  \n  \n    Otso Fenrir \n     \n    Devinci Hatchet \n  \n  \n    Amigo Bug Out \n     \n    Trek Boone 6 \n  \n  \n    Nordest Kutxo \n     \n    Giant Revolt X pro 1 short \n  \n  \n    YT Szepter \n     \n    Santa Cruz Stigmata \n  \n  \n    Rondo MYLC CF Lo \n     \n    Specialized Diverge \n  \n  \n    Rondo MYLC CF Hi \n     \n    Wilier Jena \n  \n  \n    Evil Chamois Hagar GRX \n     \n    Otso Waheela C front \n  \n  \n    Hudski Doggler Gravel \n     \n    Trek Checkpoint SL5 \n  \n  \n     \n     \n    Otso Waheela C rear \n  \n  \n     \n     \n    Argonaut GR3 \n  \n  \n     \n     \n    Solace OM-3 Short \n  \n  \n     \n     \n    Squid Gravtron \n  \n  \n     \n     \n    OPEN U.P. \n  \n  \n     \n     \n    Thesis OB1 \n  \n  \n     \n     \n    Blackheart All Road TI \n  \n  \n     \n     \n    Lauf Siegla \n  \n  \n     \n     \n    Why R+ V4 \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStyle\n\n\n\n\nTrail\n\n\n\n\n\nEndurance\n\n\n\n\n\nAll-Road\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStyle\n\n\n\n\nTrail\n\n\n\n\n\nEndurance\n\n\n\n\n\nAll-Road\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStyle\n\n\n\n\nTrail\n\n\n\n\n\nEndurance\n\n\n\n\n\nAll-Road"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bike Geometry Project",
    "section": "",
    "text": "copyright 2022 Jeffrey A. Walker"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]