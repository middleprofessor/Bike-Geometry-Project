---
title: "Gravel Scatter new"
---

```{r setup-gravel-scatter-new, echo=FALSE, warning=FALSE, message=FALSE}
source_path <- here::here("bike_geometry_project.R")
source(source_path)
```

```{r}
scatter_fig_new <- function(data = geobike,
                        x_col = "reach", y_col = "stack", g_col = "model_size",
                        x_label = "Reach", y_label = "Stack",
                        x_info = NULL, y_info = NULL,
                        digits = 0,
                        dot_palette = pal_okabe_ito_7,
                        dot_opacity = 0.3,
                        same_xy_scale = TRUE){ # if units are same on x and y then scales should be preserved
  #shared_data <- highlight_key(data, ~model)
  bike_x <- highlight_key(data)

  if(is.null(x_info)){x_info <- x_label}
  if(is.null(y_info)){y_info <- y_label}
  restyle_legend <- ifelse(g_col == "restyle",
                           TRUE,
                           FALSE)
  n_colors <- length(levels(data[, restyle]))
  
  # set range of axes
  min_data_x <- min(data[, get(x_col)], na.rm = TRUE)
  min_data_y <- min(data[, get(y_col)], na.rm = TRUE)
  max_data_x <- max(data[, get(x_col)], na.rm = TRUE)
  max_data_y <- max(data[, get(y_col)], na.rm = TRUE)
  range_x <- max_data_x - min_data_x
  range_y <- max_data_y - min_data_y
  range_axis_x <- range_x * 1.1
  range_axis_y <- range_y * 1.1
  if(same_xy_scale == TRUE){
    if(range_x > range_y){
      range_axis_y <- range_axis_y * range_x/range_y
    }else{
      range_axis_x <- range_axis_x * range_y/range_x
    }}
  min_axis_x <- (min_data_x + max_data_x)/2 - 0.5*range_axis_x
  max_axis_x <- (min_data_x + max_data_x)/2 + 0.5*range_axis_x
  min_axis_y <- (min_data_y + max_data_y)/2 - 0.5*range_axis_y
  max_axis_y <- (min_data_y + max_data_y)/2 + 0.5*range_axis_y
  
  fig <- bike_x %>% plot_ly()
  fig <- fig %>%
    add_trace(
      type = "scatter",
      mode = "markers",
      x = ~get(x_col),
      y = ~get(y_col),
      color = ~restyle,
      colors = dot_palette[1:n_colors],
      opacity = dot_opacity,
      size = 10,
      showlegend = FALSE,
      marker = list( 
        size = 10,
        line = list('width' = 2)
      ),
      hoverinfo = "text",
      text = ~paste(model, frame_size,
                    "<br>Cat:", restyle,
                    paste0("<br>", x_info, ":"), round(get(x_col), digits),
                    paste0("<br>", y_info, ":"), round(get(y_col), digits))
    )
  
  fig <- fig  %>%
    add_trace(
      type = "scatter",
      mode = "markers",
      x = ~get(x_col),
      y = ~get(y_col),
      marker = list( 
        size = 14,
        opacity = 1,
        color = ~color, # color is a column in the data with the hex code for the color
        colors = dot_palette[1:n_colors]
      ),
      text = ~paste(model, frame_size),
      textfont = list(size = 12),
      name = ~model_size,
      textposition = "right",
      visible = "legendonly",
      showlegend = TRUE
    ) %>% 
    layout(xaxis = list(title = x_label,
                        tickfont = list(size = 16), titlefont = list(size = 16),
                        range = c(min_axis_x, max_axis_x)),
           yaxis = list(title = y_label,
                        tickfont = list(size = 16), titlefont = list(size = 16),
                        range = c(min_axis_y, max_axis_y)),
           legend = list(font = list(size = 10),
                         itemsizing = "constant"),
           title = list(text = paste(y_label, "vs.", x_label),
                        x = 0,
                        xanchor = "left"),
           # autosize = F, width = 800, height = 600
           NULL
    )
  
  
  # set up check boxes
  boxes <- filter_checkbox("size", "Size", bike_x, ~Size, inline = FALSE)
# plot check boxes and fig
  p <- bscols(
    widths = c(10, 2), fig, boxes
  )
  return(p)
}
 
  p1 <- scatter_fig_new(data = geobike,
                    x_col = "reach", y_col = "stack",
                    x_label = "Reach (mm)", y_label = "Stack (mm)")
  p1

```

test filter sizes

```{r scatter-new, echo=FALSE}
# , out.width = "100%", out.height = "100%"
bike_x <- highlight_key(geobike)

x_col <- "reach"
y_col <- "stack"
same_xy_scale <- TRUE

  # set range of axes
  min_data_x <- min(geobike[, get(x_col)], na.rm = TRUE)
  min_data_y <- min(geobike[, get(y_col)], na.rm = TRUE)
  max_data_x <- max(geobike[, get(x_col)], na.rm = TRUE)
  max_data_y <- max(geobike[, get(y_col)], na.rm = TRUE)
  range_x <- max_data_x - min_data_x
  range_y <- max_data_y - min_data_y
  range_axis_x <- range_x * 1.1
  range_axis_y <- range_y * 1.1
  if(same_xy_scale == TRUE){
    if(range_x > range_y){
      range_axis_y <- range_axis_y * range_x/range_y
    }else{
      range_axis_x <- range_axis_x * range_y/range_x
    }}
  min_axis_x <- (min_data_x + max_data_x)/2 - 0.5*range_axis_x
  max_axis_x <- (min_data_x + max_data_x)/2 + 0.5*range_axis_x
  min_axis_y <- (min_data_y + max_data_y)/2 - 0.5*range_axis_y
  max_axis_y <- (min_data_y + max_data_y)/2 + 0.5*range_axis_y
 
  
g_col <- "restyle"
  fig <- bike_x %>% plot_ly()
  fig <- fig %>%
    add_trace(
      type = "scatter",
      mode = "markers",
      x = ~get(x_col),
      y = ~get(y_col),
      color = ~get(g_col),
      colors = pal_okabe_ito_3,
      showlegend = FALSE,
      opacity = 0.5,
      marker = list( 
        size = 14,
        line = list('width' = 2)
      ),
      hoverinfo = "text",
      text = ~paste(model, frame_size)
    )
  
  fig <- fig  %>%
    add_trace(
      type = "scatter",
      mode = "markers",
      x = ~get(x_col),
      y = ~get(y_col),
      marker = list( 
        size = 14,
        opacity = 1,
        color = ~color,
        colors = pal_okabe_ito_3
      ),
      text = ~paste(model, frame_size),
      textfont = list(size = 12),
      name = ~model_size,
      textposition = "right",
      visible = "legendonly",
      showlegend = TRUE
    ) %>% 
    layout(xaxis = list(tickfont = list(size = 16), titlefont = list(size = 16),
                        range = c(min_axis_x, max_axis_x)),
           yaxis = list(tickfont = list(size = 16), titlefont = list(size = 16),
                        range = c(min_axis_y, max_axis_y)),
           legend = list(font = list(size = 10),
                         itemsizing = "constant"),
           # title = list(text = paste(y_label, "vs.", x_label),
           #              x = 0,
           #              xanchor = "left"),
           # autosize = F, width = 800, height = 600
           NULL
    )
  
  
# set up check boxes
  boxes <- filter_checkbox("size", "Size", bike_x, ~Size, inline = FALSE)
# plot check boxes and fig
  bscols(
    widths = c(10, 2), fig, boxes
  )
  

```

